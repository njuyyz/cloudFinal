I state that I have successfully patched and built my BFS-enabled kernel, and succesffully booted into it.

1. differences between bfs config file and cfs config file:

47a48
> CONFIG_SCHED_BFS=y
50c51
< CONFIG_LOCALVERSION="-yy2509"
---
> CONFIG_LOCALVERSION="-yy2509-bfs"
108d108
< # CONFIG_TICK_CPU_ACCOUNTING is not set
144d143
< # CONFIG_CGROUP_CPUACCT is not set
152d150
< # CONFIG_CGROUP_SCHED is not set
164d161
< # CONFIG_SCHED_AUTOGROUP is not set
211d207
< # CONFIG_SLAB is not set
3263d3258
< # CONFIG_RCU_TORTURE_TEST is not set

2. kernel compile time:

My configuration:

CPU: 1.8GHz Intel Core i5
Memory: 4GB 1600 MHz DDR3
Number of CPU cores: 4


compile bfs:
real    25m19s
user    57m25s
sys     113m42s

compile cfs:
real    33m19s
user    32m34s
sys     184m7s

As the data show, bfs is a little faster than cfs in real time of compiling.More specifically, bfs took 25m19s, and cfs took 33m19s, in which bfs is 8 minutes faster than cfs( 20% faster)

3. For this part. I did the experiments by running a busy while loop on background, and then ran a recursive program to count 46th value of fibonacci array. I ran that program in different situations: different nice values, on background, on forground.
(1) the user time for all the runnings were the same(which is arround 2 mins), because the program did the same thing every time. 
(2) when I compared the cfs and bfs, I ran the program on foreground with nice value equals to 0 (which was the same as the background busy running while loop). And the bfs ran the program with real time 263 seconds, while cfs ran the program with real time 267 seconds, which were also very close. If we need to differenciate bfs and cfs, then I should say that bfs is 2% faster than cfs, when running a program on foreground.
(3) when the values of nice command are different, the time to run my fibonacci array program are similar. I set the nice value of the background while loop to 0, then I changed the nice value of my fibinacci program. when I set the nice value to 3 (larger than the nice value of 'while loop'), the BFS kernel still got slightly better performance, which the real time is 293 seconds, while CFS kernel got 295 seconds.

